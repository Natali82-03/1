# –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
import streamlit as st  # –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
import pandas as pd  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏
import matplotlib.pyplot as plt  # –î–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
import matplotlib.colors as mcolors  # –î–ª—è —Ü–≤–µ—Ç–æ–≤ –≤ –≥—Ä–∞—Ñ–∏–∫–∞—Ö
import chardet  # –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–¥–∏—Ä–æ–≤–∫–∏ —Ñ–∞–π–ª–æ–≤

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–¥–∏—Ä–æ–≤–æ–∫
@st.cache_data  # –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏ —É—Å–∫–æ—Ä–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
def load_data(file_name):
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç CSV-—Ñ–∞–π–ª —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫–∏.
    –ü—Ä–æ–±—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∫–æ–¥–∏—Ä–æ–≤–æ–∫, –µ—Å–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç.
    
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        file_name (str): –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
        
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        pd.DataFrame: –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    """
    # –®–∞–≥ 1: –ü—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–¥–∏—Ä–æ–≤–∫—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    with open(file_name, 'rb') as f:
        rawdata = f.read(10000)  # –ß–∏—Ç–∞–µ–º –ø–µ—Ä–≤—ã–µ 10–ö–ë –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        result = chardet.detect(rawdata)  # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É
    
    # –®–∞–≥ 2: –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
    try:
        df = pd.read_csv(file_name, sep=';', encoding=result['encoding'])
    except UnicodeDecodeError:
        # –ï—Å–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ, –ø—Ä–æ–±—É–µ–º —Ä—É—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
        try:
            # –ü–æ–ø—ã—Ç–∫–∞ —Å UTF-8 (—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç)
            df = pd.read_csv(file_name, sep=';', encoding='utf-8')
        except:
            try:
                # –ü–æ–ø—ã—Ç–∫–∞ —Å Windows-1251 (–¥–ª—è –∫–∏—Ä–∏–ª–ª–∏—Ü—ã)
                df = pd.read_csv(file_name, sep=';', encoding='cp1251')
            except:
                # –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∞—Ä–∏–∞–Ω—Ç - latin1 (—Ä–µ–¥–∫–æ, –Ω–æ —á–∏—Ç–∞–µ—Ç –ø–æ—á—Ç–∏ –≤—Å—ë)
                df = pd.read_csv(file_name, sep=';', encoding='latin1')
    
    # –®–∞–≥ 3: –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
    # –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏—è—Ö —Å—Ç–æ–ª–±—Ü–æ–≤
    df = df.rename(columns=lambda x: x.strip())
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —Ä–µ–≥–∏–æ–Ω–æ–≤
    if 'Name' not in df.columns:
        st.error(f"–û—à–∏–±–∫–∞: –≤ —Ñ–∞–π–ª–µ {file_name} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç–æ–ª–±–µ—Ü 'Name'")
        st.stop()  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–µ
    
    # –û—á–∏—â–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ–≥–∏–æ–Ω–æ–≤ –æ—Ç –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤
    df['Name'] = df['Name'].str.strip()
    
    return df

# --- –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–∞—à–±–æ—Ä–¥–∞
st.title('üìä –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö')

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
with st.spinner('–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...'):
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Ç—Ä–∏ –Ω–∞–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
        budget_df = load_data('budget.csv')  # –î–∞–Ω–Ω—ã–µ –ø–æ –±—é–¥–∂–µ—Ç–∞–º
        housing_df = load_data('housing.csv')  # –î–∞–Ω–Ω—ã–µ –ø–æ –∂–∏–ª–æ–º—É —Ñ–æ–Ω–¥—É
        investments_df = load_data('investments.csv')  # –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
        st.stop()  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –†–∞–∑–¥–µ–ª –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
st.header('1. –í—ã–±–æ—Ä —Ç–µ–º—ã –∞–Ω–∞–ª–∏–∑–∞')
topic = st.radio(
    "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:",
    ('–ë—é–¥–∂–µ—Ç', '–ñ–∏–ª–∏—â–Ω—ã–π —Ñ–æ–Ω–¥', '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏'),
    horizontal=True,  # –†–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ
    index=0  # –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
)

# –í—ã–±–∏—Ä–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–¥–ø–∏—Å—å –¥–ª—è –æ—Å–∏ Y
if topic == '–ë—é–¥–∂–µ—Ç':
    df = budget_df
    y_label = '–ë—é–¥–∂–µ—Ç (—Ä—É–±–ª–∏)'
    description = "–ê–Ω–∞–ª–∏–∑ –±—é–¥–∂–µ—Ç–Ω—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π —Ä–µ–≥–∏–æ–Ω–æ–≤"
elif topic == '–ñ–∏–ª–∏—â–Ω—ã–π —Ñ–æ–Ω–¥':
    df = housing_df
    y_label = '–ñ–∏–ª–∏—â–Ω—ã–π —Ñ–æ–Ω–¥ (–∫–≤. –º –Ω–∞ —á–µ–ª.)'
    description = "–ê–Ω–∞–ª–∏–∑ –æ–±–µ—Å–ø–µ—á–µ–Ω–Ω–æ—Å—Ç–∏ –∂–∏–ª—å–µ–º –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º"
else:
    df = investments_df
    y_label = '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ (—Ä—É–±–ª–∏)'
    description = "–ê–Ω–∞–ª–∏–∑ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã—Ö –ø–æ—Ç–æ–∫–æ–≤ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º"

# –í—ã–≤–æ–¥–∏–º –æ–ø–∏—Å–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º—ã
st.caption(f"üîç {description}")

# –†–∞–∑–¥–µ–ª –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
st.header('2. –í—ã–±–æ—Ä –ø–µ—Ä–∏–æ–¥–∞ –∞–Ω–∞–ª–∏–∑–∞')

# –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —á–∏—Å–ª–æ–≤—ã–µ —Å—Ç–æ–ª–±—Ü—ã (–≥–æ–¥—ã) –≤ –¥–∞–Ω–Ω—ã—Ö
numeric_cols = [col for col in df.columns if str(col).isdigit()]
if not numeric_cols:
    st.error("–û—à–∏–±–∫–∞: –≤ –¥–∞–Ω–Ω—ã—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —á–∏—Å–ª–æ–≤—ã–µ —Å—Ç–æ–ª–±—Ü—ã (–≥–æ–¥—ã).")
    st.stop()

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≥–æ–¥
available_years = [int(col) for col in numeric_cols]
min_year, max_year = min(available_years), max(available_years)

# –°–ª–∞–π–¥–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –ª–µ—Ç
year_range = st.slider(
    '–í—ã–±–µ—Ä–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –ª–µ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:',
    min_value=min_year,
    max_value=max_year,
    value=(min_year, max_year),  # –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    help="–ü–µ—Ä–µ–º–µ—â–∞–π—Ç–µ –ø–æ–ª–∑—É–Ω–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω—É–∂–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞"
)

# –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –≥–æ–¥–æ–≤
year_columns = [str(year) for year in range(year_range[0], year_range[1]+1)]

# –†–∞–∑–¥–µ–ª –≤—ã–±–æ—Ä–∞ —Ä–µ–≥–∏–æ–Ω–æ–≤
st.header('3. –í—ã–±–æ—Ä —Ä–µ–≥–∏–æ–Ω–æ–≤')

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤ –∏–∑ –¥–∞–Ω–Ω—ã—Ö
all_regions = df['Name'].unique()

# –ú—É–ª—å—Ç–∏—Å–µ–ª–µ–∫—Ç –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–≥–∏–æ–Ω–æ–≤
selected_regions = st.multiselect(
    '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω—ã –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è:',
    options=all_regions,
    default=[all_regions[0]],  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π —Ä–µ–≥–∏–æ–Ω
    help="–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–µ–≥–∏–æ–Ω–æ–≤ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è"
)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—ã–±—Ä–∞–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ä–µ–≥–∏–æ–Ω
if not selected_regions:
    st.warning("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ä–µ–≥–∏–æ–Ω.")
    st.stop()

# –§–∏–ª—å—Ç—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ä–µ–≥–∏–æ–Ω–∞–º
filtered_df = df[df['Name'].isin(selected_regions)][['Name'] + year_columns]

# --- –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö ---
st.header('4. –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö')

# –°–æ–∑–¥–∞–µ–º –≥—Ä–∞—Ñ–∏–∫ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
fig, ax = plt.subplots(figsize=(12, 6))  # –ó–∞–¥–∞–µ–º —Ä–∞–∑–º–µ—Ä –≥—Ä–∞—Ñ–∏–∫–∞

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
colors = list(mcolors.TABLEAU_COLORS.values())

# –°—Ç—Ä–æ–∏–º –ª–∏–Ω–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞
for idx, (_, row) in enumerate(filtered_df.iterrows()):
    region_name = row['Name']  # –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–∞
    values = row[year_columns].values  # –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è
    years = [int(year) for year in year_columns]  # –ì–æ–¥—ã
    
    # –†–∏—Å—É–µ–º –ª–∏–Ω–∏—é –¥–ª—è —Ä–µ–≥–∏–æ–Ω–∞
    ax.plot(
        years,
        values,
        label=region_name,
        color=colors[idx % len(colors)],  # –¶–∏–∫–ª–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ü–≤–µ—Ç–∞
        marker='o',  # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ—á–∫–∏ –Ω–∞ –≥—Ä–∞—Ñ–∏–∫
        linewidth=2  # –¢–æ–ª—â–∏–Ω–∞ –ª–∏–Ω–∏–∏
    )

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ –≥—Ä–∞—Ñ–∏–∫–∞
ax.set_xlabel('–ì–æ–¥', fontsize=12)
ax.set_ylabel(y_label, fontsize=12)
ax.set_title(f'–î–∏–Ω–∞–º–∏–∫–∞ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è "{topic}" –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ä–µ–≥–∏–æ–Ω–∞–º', fontsize=14)
ax.legend(bbox_to_anchor=(1.05, 1), loc='upper left')  # –í—ã–Ω–æ—Å–∏–º –ª–µ–≥–µ–Ω–¥—É –∑–∞ –≥—Ä–∞—Ñ–∏–∫
ax.grid(True, linestyle='--', alpha=0.7)  # –î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ç–∫—É
plt.xticks(years, rotation=45)  # –ü–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø–æ–¥–ø–∏—Å–∏ –Ω–∞ –æ—Å–∏ X
plt.tight_layout()  # –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤

# –í—ã–≤–æ–¥–∏–º –≥—Ä–∞—Ñ–∏–∫ –≤ Streamlit
st.pyplot(fig)

# --- –¢–∞–±–ª–∏—Ü–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ ---
st.header('5. –¢–∞–±–ª–∏—Ü–∞ –¥–∞–Ω–Ω—ã—Ö')

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
st.dataframe(
    filtered_df.reset_index(drop=True),
    height=min(400, len(filtered_df) * 35 + 35),  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤—ã—Å–æ—Ç–∞
    use_container_width=True,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—é —à–∏—Ä–∏–Ω—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    hide_index=True  # –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
)

# --- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ---
st.markdown("---")
st.info(f"""
**–°–≤–æ–¥–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**
- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º—ã–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å: {topic}
- –ü–µ—Ä–∏–æ–¥: —Å {year_range[0]} –ø–æ {year_range[1]} –≥–æ–¥
- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–≥–∏–æ–Ω–æ–≤: {len(selected_regions)}
- –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: {pd.Timestamp.now().strftime('%Y-%m-%d')}
""")

# –°–µ–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (–º–æ–∂–Ω–æ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ)
with st.expander("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)"):
    st.write("–û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è –∫–æ–¥–∏—Ä–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤:")
    for file in ['budget.csv', 'housing.csv', 'investments.csv']:
        with open(file, 'rb') as f:
            st.write(f"{file}: {chardet.detect(f.read(10000))['encoding']}")